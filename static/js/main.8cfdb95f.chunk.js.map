{"version":3,"sources":["logo.svg","vevents.js","ics.js","components/datePicker.jsx","components/eventform.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Vevents","classification","latitude","longtitude","location","priority","summary","start","end","recurr","count","timezone","resources","this","begin","geo","ending","output","Object","keys","reduce","accumulator","currentValue","substring","length","Ics","vevents","prodID","version","currentVal","build","trim","useStyles","makeStyles","theme","container","display","flexWrap","textField","width","DateAndTimePickers","props","classes","className","noValidate","TextField","id","label","name","type","onChange","defaultValue","selected","InputLabelProps","shrink","classificatication","text","value","priorityOptions","recurrOptions","countOptions","EventForm","state","Intl","DateTimeFormat","resolvedOptions","timeZone","errorToggle","error","handleChange","event","console","log","target","setState","handleSelectOptionForms","e","handlePlaceChange","geocodeByAddress","then","results","getLatLng","latLng","lat","lng","catch","handleTimezoneChange","userTimezone","handleDateStartChange","startDate","Date","handleDateEndChange","endDate","buildDate","date","replace","concat","handleSubmit","formComplete","icsEvent","calendar","fileDownload","val","formReset","renderFunc","getInputProps","getSuggestionItemProps","suggestions","loading","placeholder","map","suggestion","description","offsetMs","getTimezoneOffset","msLocal","getTime","toISOString","slice","Alert","onClose","Fragment","Container","Grid","centered","Form","method","action","Input","fluid","inline","size","absolute","onSelect","Group","Select","options","onClick","Component","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8cfdb95f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export default class Vevents {\n  constructor(classification, latitude, longtitude, location, priority, summary, start, end, recurr, count, timezone, resources) {\n    this.begin = 'Begin:VEVENT';\n    this.classification = 'CLASS:' + (classification || 'PUBLIC');\n    this.geo = 'GEO:' + latitude + ';' + longtitude;\n    this.summary = 'SUMMARY:' + summary;\n    this.start = 'DTSTART;TZID='+ timezone + ':' + start;\n    this.end = 'DTEND;TZID='+ timezone + ':' + end;\n    this.recurr = (recurr == ' ') ? '' : 'RRULE:FREQ=' + recurr + ';' + count;\n    this.priority = 'PRIORITY:' + priority;\n    this.location = 'LOCATION:' + location;\n    this.resources = 'RESOURCES:' + resources;\n    this.ending = 'END:VEVENT';\n    // this.description = 'DESCRIPTION:' +  description;\n    // this.modified = new Date();\n    // this.created = created; -- not sure if we need this\n  }\n\n  // set modified(modified) {\n  //   if (modified instanceof Date) {\n  //     this.modified = modified;\n  //   }\n  // }\n\n  build() {\n    let output = '';\n    const objectKeys = Object.keys(this);\n    output = objectKeys.reduce((accumulator, currentValue) => accumulator + this[currentValue] + '\\n', '');\n    output = output.substring(0, output.length - 1);\n    return output;\n  }\n}","// Pass in components to build the ICS file\nexport default class Ics {\n  constructor(vevents = [], prodID, version, timezone) {\n    this.prodID = `PRODID:${prodID || '-//ICS 414 Turkey Pie//Calendar Project //EN'}`;\n    this.version = `VERSION:${version || '2.0'}`;\n    this.timezone = `TZID:${timezone || 'Pacific/Honolulu'}`;\n    this.vevents = vevents;\n  }\n\n  build() {\n    const output = `${'BEGIN:VCALENDAR'}${'\\n'}${this.prodID}${'\\n'}${this.version}${'\\n'}${this.timezone}${'\\n'}`\n    + `${this.vevents.reduce((accumulator, currentVal) => accumulator + currentVal.build() + '\\n', '')}`;\n\n    return output.trim() + '\\nEND:VCALENDAR';\n  }\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    width: 200,\n  },\n}));\n\nexport default function DateAndTimePickers(props) {\n  const classes = useStyles();\n\n  return (\n      <form className={classes.container} noValidate>\n        <TextField\n          id=\"datetime-local\"\n          label= {props.name}\n          type=\"datetime-local\"\n          onChange= {props.onChange}\n          defaultValue={props.selected}\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      </form>\n  );\n}","import React, { Component } from 'react';\nimport { Form, Icon, Container, Label, Grid } from 'semantic-ui-react'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Vevents from '../vevents';\nimport Ics from '../ics';\nimport fileDownload from 'js-file-download';\nimport '../App.css';\nimport Alert from '@material-ui/lab/Alert';\nimport DateAndTimePickers from './datePicker';\nimport TimezonePicker from 'react-bootstrap-timezone-picker';\nimport 'react-bootstrap-timezone-picker/dist/react-bootstrap-timezone-picker.min.css';\n// import Button from '@material-ui/core/Button';\n// import SaveIcon from '@material-ui/icons/Save';\n// import TextField from '@material-ui/core/TextField';\n// import Container from '@material-ui/core/Container';\n// import { Icon } from '@material-ui/core';\n// import Map from './map'\n// import LocationPickerExample from './locationPicker'\n// import AlertDialog from './alertDialog'\n// import AppBar from './appBar'\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\n\nconst options = [\n  { key: 'm', text: 'Male', value: 'male' },\n  { key: 'f', text: 'Female', value: 'female' },\n  { key: 'o', text: 'Other', value: 'other' },\n]\n\nconst classificatication = [\n  {text: 'Public', value:'PUBLIC'},\n  {text: 'Private', value:'PRIVATE'}\n]\n\nconst priorityOptions = [\n  {text: '1', value: '1'},\n  {text: '2', value:'2'},\n  {text: '3', value:'3'},\n  {text: '4', value:'4'},\n  {text: '5', value:'5'},\n  {text: '6', value:'6'},\n  {text: '7', value:'7'},\n  {text: '8', value:'8'},\n  {text: '9', value:'9'},\n  {text: '10', value:'10'}\n]\n\n\nconst recurrOptions = [\n    { text: 'Weekly', value: 'WEEKLY' },\n    { text: 'Daily', value: 'DAILY' },\n    { text: 'None', value: ' ' }\n]\n\nconst countOptions = [\n    { text: 'Indefinitely', value: ' ' },\n    { text: '1', value: 'COUNT=1' },\n    { text: '2', value: 'COUNT=2' },\n    { text: '3', value: 'COUNT=3' },\n    { text: '4', value: 'COUNT=4' },\n    { text: '5', value: 'COUNT=5' },\n    { text: '10', value: 'COUNT=10' },\n    { text: '20', value: 'COUNT=20' },\n]\n\nclass EventForm extends Component {\n\n  // constructor(props){\n  //   super(props);\n\n  //   this.state= {\n  //     classification:'PUBLIC',\n  //     geo: {\n  //       latitude: '',\n  //       longtitude: '' \n  //     },\n  //     summary:'',\n  //     start:'',\n  //     end:'',\n  //     priority:'PRIORITY',\n  //     location:'LOCATION',\n  //   };\n  // }\n\n  state = {\n      classification:'PUBLIC',\n      latitude: 'Lat',\n      longtitude: 'Long' ,\n      summary:'',\n      start: '' ,\n      end: '',  \n      priority:'',\n      location: '',\n      recurr: ' ',\n      count: ' ',\n      resources: '', \n      timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      errorToggle: false,\n      error: 'None'\n  }\n\n  \n  handleChange = (event) => {\n    console.log(event);\n    const {name, value} = event.target;\n    console.log(name);\n    console.log(value);\n    console.log('Handle Change Called');\n    this.setState({ [name]: value })\n  }\n\n  dateToISOLocal(date) {\n    const offsetMs = date.getTimezoneOffset() * 60 * 1000;\n    const msLocal =  date.getTime() - offsetMs;\n    const dateLocal = new Date(msLocal);\n    const iso = dateLocal.toISOString();\n    const isoLocal = iso.slice(0, 19);\n    return isoLocal;\n}\n\n  handleSelectOptionForms = (e, {name, value}) => {\n    console.log(name);\n    console.log(value);\n    this.setState({ [name]: value })\n  }\n\n  handlePlaceChange = (location) => {\n    geocodeByAddress(location)\n    .then(results => getLatLng(results[0]))\n    .then(latLng => {\n      const {lat,lng} = latLng;\n      this.setState({ latitude: lat});\n      this.setState({ longtitude: lng});\n    })\n    .catch(error => console.error('Error', error));\n    // // console.log(getLatLng(location));\n    //getLatLng(results)\n    //getLatLng(results.geometry)\n    this.setState({ location: location})\n    console.log(this.state);\n  }\n  \n  handleTimezoneChange = (userTimezone) => {\n    console.log(userTimezone);\n    this.setState({ timezone: userTimezone})\n  }\n\n  handleDateStartChange = (event) => {\n    const startDate = new Date(event.target.value);\n    const endDate = new Date(this.state.end);\n    console.log(event.target.value);\n    if(startDate < new Date()){\n      this.setState({errorToggle: true});\n      this.setState({error: 'Start date cannot be in the past. Please pick a different date'});\n      console.log(this.state);\n    }else{\n      this.setState({ 'start': event.target.value })\n    }\n    console.log(this.state);\n\n  }\n\n  handleDateEndChange = (event) => {\n    console.log(event.target.value);\n    const endDate = new Date(event.target.value);\n    const startDate = new Date(this.state.start);\n    // console.log(endDate);\n    // console.log(new Date());\n    if(endDate < new Date()){\n      this.setState({errorToggle: true});\n      this.setState({error: 'End date cannot be in the past. Please pick a different date'});\n      console.log(this.state);\n    }else{\n      this.setState({ 'end': event.target.value})\n      console.log(this.state);\n    }\n  }\n\n  /**\n   * Processes the dates to have to correct offsets and conform to ics calendar requirments\n   */\n  buildDate = (date) => {\n    console.log('date is being built');\n    console.log(date);\n    let buildDate  = date.replace(/-/g, '');\n    buildDate = buildDate.replace(/:/g, '');\n    buildDate = buildDate.concat('00');\n    // let year = date.getYear() + 1900;\n    // let month = date.getMonth() + 1  > 9 ? date.getMonth() +1  : '0' + (date.getMonth() + 1);\n    // let day = date.getDate() > 9 ? date.getDate() : '0' + date.getDate();\n    // let buildDate = `${year}${month}${day}`;\n    return buildDate;\n  }\n  \n  \n\n  handleSubmit = () => {\n    // let {classification, latitude, longtitude, location, priority, summary, start, end, recurr, count} = this.state; \n    // start = this.buildDate(start);\n    // end = this.buildDate(end);\n    // let icsEvent = [new Vevents(classification, latitude, longtitude, location, priority, summary, start, end, recurr, count)];\n    // let icsCalendar = new Ics(icsEvent);\n    // let calendar = icsCalendar.build();\n    // console.log(this.state);\n    // fileDownload(calendar, 'Calendar.ics');\n\n\n    if (this.formComplete() === true){\n      let {classification, latitude, longtitude, location, priority, summary, start, end, timezone,recurr, count, resources} = this.state; \n      start = this.buildDate(start);\n      end = this.buildDate(end);\n      let icsEvent = [new Vevents(classification, latitude, longtitude, location, priority, summary, start, end, recurr, count,timezone, resources)];\n      let icsCalendar = new Ics(icsEvent);\n      let calendar = icsCalendar.build();\n      fileDownload(calendar, 'Calendar.ics');\n    }\n    else{\n      console.log('Error, form is not complete');\n      this.setState({errorToggle: true});\n    }\n  }\n  \n\n  formComplete = () =>{\n    const endDate = new Date(this.state.end);\n    const startDate = new Date(this.state.start);\n\n    for (let val of Object.keys(this.state)){\n      console.log(val);\n      if (this.state[val] === ''){\n        console.log('Here in my garage');\n        this.setState({error: val + ' is missing. Please complete the form '});\n        return false;\n      }\n    }\n\n    if(endDate < startDate){\n      this.setState({errorToggle: true});\n      this.setState({error: 'End date cannot be before start date. Please pick a different date'});\n      // console.log(this.state);\n      return false;\n    }\n\n    return true;\n  }\n\n  formReset = () => {\n    console.log('FormReset');\n    this.setState({errorToggle: false});\n  }\n\n  renderFunc = ({ getInputProps, getSuggestionItemProps, suggestions, loading }) => (\n    <div className=\"autocomplete-root\">\n      <input {...getInputProps({placeholder: 'Location'})} />\n      <div className=\"autocomplete-dropdown-container\">\n        {loading && <div>Loading...</div>}\n        {suggestions.map(suggestion => (\n          <div {...getSuggestionItemProps(suggestion)}>\n            <span>{suggestion.description}</span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  render() { \n    const{classification, latitude, longtitude, summary, start, end, priority, location, recurr, count, errorToggle, error, timezone, resources} = this.state;\n\n    if(errorToggle === true){\n      console.log('Error Toggle');\n      return (\n      <Alert onClose={this.formReset}>{error}</Alert>\n      )\n    }\n\n    return (  \n      <React.Fragment >\n        <Container className='Container'>\n            <Grid centered >\n              <h1>Create A Downloadable Calendar Event File</h1>\n            </Grid>\n            <Form method=\"get\" action=\"../App.js\">\n              <Form.Input\n                fluid\n                inline \n                placeholder='Title...'\n                label='Title' \n                value={summary}\n                onChange={this.handleChange}\n                name='summary'\n                size='huge'\n              />\n              <DateAndTimePickers \n                id='Start'\n                selected={new Date()} \n                onChange={this.handleDateStartChange} \n                name='start'\n              />\n\n              <DateAndTimePickers\n                id='End'\n                selected={new Date()} \n                onChange={this.handleDateEndChange} \n                name= 'end'\n              />           \n              <TimezonePicker\n                absolute      = {false}\n                defaultValue  = {timezone}\n                placeholder   = \"Select timezone...\"\n                onChange      = {this.handleTimezoneChange}\n              />                 \n              {/* <Form.Group>\n                <Form.Input \n                  width={12}\n                  label='End Date' \n                  placeholder='EndDate'\n                  value={end}\n                  readOnly\n                />\n                <Label>\n                  <Icon name='calendar outline' size='big'/>\n                  <DatePicker \n                  selected={this.state.date} \n                  onChange={this.handleDateEndChange} \n                  name={end}\n                />\n                </Label>\n              </Form.Group> */}\n              <PlacesAutocomplete\n                value={location}\n                onChange={this.handlePlaceChange}\n                onSelect={this.handlePlaceChange}\n              >\n                {this.renderFunc}\n              </PlacesAutocomplete>\n              {/* <Form.Input inline fluid\n                label='Location' \n                placeholder='Location' \n                onChange={this.handleChange}\n                name='location'\n              /> */}\n              {/* <Form.Group>\n                <Form.Input \n                  label='Latitude' \n                  placeholder='Latitude' \n                  value={latitude}\n                  name='latitude'\n                  onChange={this.handleChange}\n                />\n                <Form.Input\n                  label='Longtitude' \n                  placeholder='Longtitude' \n                  value={longtitude}\n                  name='longtitude'\n                  onChange={this.handleChange}\n                />\n              </Form.Group> */}\n              <Form.Group >\n                <Form.Select\n                  options={recurrOptions}\n                  label='Recurring'\n                  placeholder='Recurring'\n                  name='recurr'\n                  onChange={this.handleSelectOptionForms}\n                />\n                <Form.Select\n                  options={countOptions}\n                  label='Count'\n                  placeholder='Count'\n                  name='count'\n                  onChange={this.handleSelectOptionForms}\n                />\n              </Form.Group>\n              <Form.Select \n                width={4}\n                label='Classification'\n                options={classificatication}\n                placeholder='Classification'\n                value={classification}\n                name='classification'\n                onChange={this.handleSelectOptionForms}\n              />\n              <Form.Select \n                width={4}\n                label='priority'\n                options={priorityOptions}\n                placeholder='priority'\n                value={priority}\n                name='priority'\n                onChange={this.handleSelectOptionForms}\n              />    \n              <Form.Input\n                fluid\n                inline \n                placeholder='resources'\n                label='Resources' \n                value={resources}\n                onChange={this.handleChange}\n                name='resources'\n                size='medium'\n              />          \n              {/* <Form.Input\n                width={4}\n                label='Priority' \n                placeholder='Priority: 1-10' \n                onChange={this.handleChange}\n                name='priority'\n              /> */}\n            </Form>\n            <Grid centered>\n              <button className='button'\n                onClick={this.handleSubmit}\n              >\n               Click to download file\n              </button>\n            </Grid>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n \nexport default EventForm;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport EventForm from './components/eventform';\n\nfunction App() {\n  return (\n    <EventForm/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}